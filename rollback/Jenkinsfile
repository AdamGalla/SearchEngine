pipeline {
    parameters {
        string(name: 'VERSION', defaultValue: '', description: 'Version of the application')
    }

    agent any

    stages {
        stage('Rollback') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    bat 'for /f "tokens=*" %i in ('docker images --filter "reference=adm14/loadbalancer" --format "{{.ID}}"') do docker rmi -f %i'
                    bat 'for /f "tokens=*" %i in ('docker images --filter "reference=adm14/searchapi" --format "{{.ID}}"') do docker rmi -f %i'
                    bat 'for /f "tokens=*" %i in ('docker images --filter "reference=adm14/dataformatter" --format "{{.ID}}"') do docker rmi -f %i'
                    bat 'for /f "tokens=*" %i in ('docker images --filter "dangling=true" --format "{{.ID}}"') do docker rmi -f %i'
                    bat 'docker login -u %USERNAME% -p %PASSWORD%'
                    bat "docker pull adm14/loadbalancer:%VERSION%"
                    bat "docker pull adm14/searchapi:%VERSION%"
                    bat "docker pull adm14/dataformatter:%VERSION%"
                    bat "docker-compose up -d"
                }
               
            }
        }
    }
}